/**
 * 
 * @author Prakhyat Khati 
 * Assignment-3_Chatapp CMPT842-01
 * Refereces: YouTube Videos and GitHub Projects.
 * 
 */

const express = require('express');
const socketio = require('socket.io');
const http = require('http');


const { addUser, removeUser, getUser, getUsersInRoom } = require('./users.js');
const PORT = process.env.PORT || 5000;

const router = require('./router');

const app = express();
const server = http.createServer(app);
const io = socketio(server);




io.on('connection', (socket) => {
    console.log('we have a new connection');

    socket.on('join', ({ name, room }, callback) => {
        const { error, user } = addUser({ id: socket.id, name, room });

        if(error) return callback(error);
   
        socket.join(user.room); // joins the user in a room 
       // emitting the message to the current user.
       // this message is generated by the Admin
       
        socket.emit('message', { user: 'admin', text: `${user.name}, welcome to room ${user.room}.`});
        // send message to everyone beside every users.
        socket.broadcast.to(user.room).emit('message', { user: 'admin', text: `${user.name} has joined!` });
        
        
   
       io.to(user.room).emit('roomData', { room: user.room, users: getUsersInRoom(user.room) });
   
       callback();
      
        
    });
    socket.on('sendMessage', (message, callback) => {
        const user = getUser(socket.id);
   
        io.to(user.room).emit('message', { user: user.name, text: message });

        //io.to(user.room).emit('message', { user: user.room, users:getUsersInRoom(user.room) });
   
        callback();
      });

      socket.on('disconnect', () => {
        const user = removeUser(socket.id);
   
        if(user) {
          io.to(user.room).emit('message', { user: 'Admin', text: `${user.name} has left.` });
          io.to(user.room).emit('roomData', { room: user.room, users: getUsersInRoom(user.room)});
       }
      })
})

app.use(router);


server.listen(PORT, () => console.log(`Server has started. ${PORT}`));